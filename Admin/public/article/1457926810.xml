<p>说的一个大量数据的文件中快速查找一个数，且数按序存放，大家要吐槽了，这有啥，一个二分查找不就可以了吗。但绝提实现那，文件的具体二分那？</p><p><br/></p><p>先说一下我的思路：首先二分查找是肯定的，那如何准确获得文件的数据那？我是这样处理的：首先将文件指针定位到中部，然后分别向前后去读取数据，遇到分隔符就停止，最后把前后数据拼装起来</p><p><br/></p><p>直接上代码（这里文件的内容的分割符号是换行）：</p><p><br/></p><pre class="brush:php;toolbar:false">&lt;?php
function&nbsp;get_num(&amp;$fp,$size,&amp;$start,&amp;$end)
{
&nbsp;&nbsp;&nbsp;&nbsp;fseek($fp,$size);
&nbsp;&nbsp;&nbsp;&nbsp;$i&nbsp;=&nbsp;1;
&nbsp;&nbsp;&nbsp;&nbsp;$head&nbsp;=&nbsp;&#39;&#39;;
&nbsp;&nbsp;&nbsp;&nbsp;$tail&nbsp;=&nbsp;&#39;&#39;;
&nbsp;&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;fread($fp,1);
&nbsp;&nbsp;&nbsp;&nbsp;while(ord($temp)!=10&amp;&amp;(!feof($fp)))
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tail&nbsp;=&nbsp;$tail.$temp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;fread($fp,1);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i++;
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;$end&nbsp;=&nbsp;ftell($fp);
&nbsp;&nbsp;&nbsp;&nbsp;$red_new&nbsp;=&nbsp;$size-1;
&nbsp;&nbsp;&nbsp;&nbsp;fseek($fp,$red_new);
&nbsp;&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;fread($fp,1);
&nbsp;&nbsp;&nbsp;&nbsp;while(ord($temp)!=10)
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$head&nbsp;=&nbsp;$head.$temp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$red_new--;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fseek($fp,$red_new);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;fread($fp,1);
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;$start&nbsp;=&nbsp;ftell($fp);
&nbsp;&nbsp;&nbsp;&nbsp;rewind($fp);
&nbsp;&nbsp;&nbsp;&nbsp;$head&nbsp;=&nbsp;strrev($head);
&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$head.$tail;
}
if(!file_exists(&#39;test_data&#39;)){
&nbsp;&nbsp;&nbsp;&nbsp;die(&#39;file&nbsp;no&nbsp;exits&#39;);
}
$file_size&nbsp;=&nbsp;filesize(&#39;test_data&#39;);
$fp&nbsp;=&nbsp;fopen(&#39;test_data&#39;,&#39;r&#39;);
$kx&nbsp;=&nbsp;99;
$start&nbsp;=&nbsp;$end&nbsp;=&nbsp;0;
$low&nbsp;=&nbsp;1;
$high&nbsp;=&nbsp;$file_size;
$mid_w&nbsp;=$file_size/2;
while($low&lt;=$high)
{
&nbsp;&nbsp;&nbsp;&nbsp;$mid&nbsp;=&nbsp;get_num($fp,$mid_w,$start,$end);
&nbsp;&nbsp;&nbsp;&nbsp;if($kx&lt;$mid){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$high&nbsp;=&nbsp;$start-1;
&nbsp;&nbsp;&nbsp;&nbsp;}else{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($kx&gt;$mid){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$low&nbsp;=&nbsp;$end+1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;$mid_w&nbsp;=&nbsp;($high+$low)/2;
}
echo&nbsp;&quot;num&nbsp;=&nbsp;$mid&nbsp;size&nbsp;=&nbsp;&quot;.strlen($mid).&quot;&lt;br/&gt;&quot;;
echo&nbsp;&quot;start&nbsp;=&nbsp;$start&nbsp;end&nbsp;=&nbsp;$end&lt;br/&gt;&quot;;
echo&nbsp;&#39;&lt;hr&nbsp;/&gt;&#39;;
$o&nbsp;=&nbsp;get_num($fp,$start,$start,$end);
echo&nbsp;&quot;o&nbsp;=&nbsp;$o&nbsp;&lt;br/&gt;&quot;;</pre><p><br/></p>